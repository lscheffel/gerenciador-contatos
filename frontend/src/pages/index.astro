---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Gerenciador de Contatos">
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- Formulário para adicionar/editar contatos -->
    <div class="lg:col-span-1">
      <div class="bg-gray-50 dark:bg-neutral-800 rounded-lg shadow-sm border border-gray-200 dark:border-neutral-700">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4" id="form-title">
            Adicionar Contato
          </h3>
          <form id="contact-form" class="space-y-4">
            <input type="hidden" id="contact-id" />
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Nome</label>
              <input
                type="text"
                id="name"
                name="name"
                placeholder="Digite o nome"
                class="form-input mt-1 block w-full rounded-md border-gray-300 dark:border-neutral-600 bg-gray-50 dark:bg-neutral-700 text-gray-900 dark:text-white shadow-sm focus:border-orange-500 focus:ring-orange-500 focus:ring-opacity-50 sm:text-sm transition-colors"
                required
              />
            </div>
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                placeholder="Digite o email"
                class="form-input mt-1 block w-full rounded-md border-gray-300 dark:border-neutral-600 bg-gray-50 dark:bg-neutral-700 text-gray-900 dark:text-white shadow-sm focus:border-orange-500 focus:ring-orange-500 focus:ring-opacity-50 sm:text-sm transition-colors"
                required
              />
            </div>
            <div>
              <label for="phone" class="block text-sm font-medium text-gray-700 dark:text-gray-200">Telefone</label>
              <input
                type="text"
                id="phone"
                name="phone"
                placeholder="Digite o telefone"
                class="form-input mt-1 block w-full rounded-md border-gray-300 dark:border-neutral-600 bg-gray-50 dark:bg-neutral-700 text-gray-900 dark:text-white shadow-sm focus:border-orange-500 focus:ring-orange-500 focus:ring-opacity-50 sm:text-sm transition-colors"
              />
            </div>
            <div class="flex flex-col gap-2 pt-2">
              <button
                type="submit"
                class="inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-orange-600 hover:bg-orange-700 dark:bg-orange-700 dark:hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 dark:focus:ring-offset-gray-800 transition-colors"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                Salvar
              </button>
              <button
                type="button"
                id="cancel-edit"
                class="hidden inline-flex justify-center items-center px-4 py-2 border border-gray-300 dark:border-neutral-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-50 dark:bg-neutral-800 hover:bg-gray-100 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 dark:focus:ring-offset-neutral-800 transition-colors"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
                Cancelar
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- Lista de contatos -->
    <div class="lg:col-span-2">
      <div class="bg-gray-50 dark:bg-neutral-800 rounded-lg shadow-sm border border-gray-200 dark:border-neutral-700">
        <div class="px-4 py-5 sm:p-6">
          <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
              <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">
                Contatos
              </h3>
              <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                Lista de todos os seus contatos cadastrados.
              </p>
            </div>
          </div>
          <div id="contacts" class="mt-6 space-y-4 overflow-hidden"></div>
        </div>
      </div>
    </div>
  </div>

  <script is:inline>
    // Função para carregar contatos
    async function loadContacts() {
      try {
        const response = await fetch('http://localhost:5000/api/contacts');
        const contacts = await response.json();
        const contactsDiv = document.getElementById('contacts');
        if (!contactsDiv) return;
        
        if (contacts.length === 0) {
          contactsDiv.innerHTML = `
            <div class="text-center py-12">
              <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
              </svg>
              <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-gray-100">Nenhum contato</h3>
              <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Comece adicionando um novo contato.</p>
            </div>
          `;
          return;
        }

        contactsDiv.innerHTML = contacts.map(c => `
          <div class="bg-white dark:bg-neutral-800/50 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-neutral-700 transition-colors">
            <div class="flex items-start justify-between">
              <div class="min-w-0 flex-1">
                <div class="flex items-center space-x-3">
                  <div class="flex-shrink-0">
                    <span class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-orange-600 dark:bg-orange-700">
                      <span class="text-lg font-medium leading-none text-white">${c.name.charAt(0).toUpperCase()}</span>
                    </span>
                  </div>
                  <div class="min-w-0 flex-1">
                    <p class="text-sm font-medium text-gray-900 dark:text-white truncate">${c.name}</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400 truncate">${c.email}</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400 truncate">${c.phone || 'Sem telefone'}</p>
                  </div>
                </div>
              </div>
              <div class="flex flex-shrink-0 gap-2">
                <button
                  onclick="editContact(${c.id}, '${c.name}', '${c.email}', '${c.phone || ''}')"
                  class="inline-flex items-center rounded-md bg-orange-500 dark:bg-neutral-800 px-2.5 py-1.5 text-sm font-medium text-white dark:text-gray-300 hover:bg-orange-600 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-800 border border-transparent dark:border-neutral-600 transition-colors"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                  Editar
                </button>
                <button
                  onclick="deleteContact(${c.id})"
                  class="inline-flex items-center rounded-md bg-red-500 dark:bg-neutral-800 px-2.5 py-1.5 text-sm font-medium text-white dark:text-red-400 hover:bg-red-600 dark:hover:bg-red-900/20 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-800 border border-transparent dark:border-red-500/30 transition-colors"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                  </svg>
                  Excluir
                </button>
              </div>
            </div>
          </div>
        `).join('');
      } catch (error) {
        console.error('Erro ao carregar contatos:', error);
        const contactsDiv = document.getElementById('contacts');
        if (contactsDiv) {
          contactsDiv.innerHTML = `
            <div class="text-center py-12 text-red-600">
              <p>Erro ao carregar contatos. Por favor, verifique se o servidor está rodando.</p>
            </div>
          `;
        }
      }
    }

    // Função para editar contato
    function editContact(id, name, email, phone = '') {
      const idInput = document.getElementById('contact-id');
      const nameInput = document.getElementById('name');
      const emailInput = document.getElementById('email');
      const phoneInput = document.getElementById('phone');
      const cancelButton = document.getElementById('cancel-edit');
      const submitButton = document.querySelector('button[type="submit"]');
      const formTitle = document.getElementById('form-title');

      if (!idInput || !nameInput || !emailInput || !phoneInput || !cancelButton || !submitButton || !formTitle) {
        alert('Erro ao preparar edição do contato');
        return;
      }

      // Preenche os campos
      idInput.value = id.toString();
      nameInput.value = name;
      emailInput.value = email;
      phoneInput.value = phone;
      
      // Atualiza a UI
      window.scrollTo({ top: 0, behavior: 'smooth' });
      cancelButton.classList.remove('hidden');
      formTitle.textContent = 'Editar Contato';
      
      submitButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
        </svg>
        Atualizar
      `;
    }

    // Função para excluir contato
    async function deleteContact(id) {
      if (!confirm('Tem certeza que deseja excluir este contato?')) return;

      try {
        const response = await fetch(`http://localhost:5000/api/contacts/${id}`, {
          method: 'DELETE',
        });
        
        if (!response.ok) {
          const error = await response.json();
          throw new Error(error.message || 'Erro ao excluir contato');
        }

        await loadContacts();
      } catch (error) {
        console.error('Erro ao excluir contato:', error);
        alert(error instanceof Error ? error.message : 'Erro ao excluir contato. Verifique o servidor.');
      }
    }

    // Manipular envio do formulário
    const form = document.getElementById('contact-form');
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        try {
          const formData = new FormData(e.target);
          const idInput = document.getElementById('contact-id');
          const id = idInput?.value;

          const contact = {
            name: formData.get('name'),
            email: formData.get('email'),
            phone: formData.get('phone') || '',
          };

          const method = id ? 'PUT' : 'POST';
          const url = id
            ? `http://localhost:5000/api/contacts/${id}`
            : 'http://localhost:5000/api/contacts';

          const response = await fetch(url, {
            method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(contact),
          });

          if (!response.ok) {
            const error = await response.json();
            throw new Error(error.message || 'Erro ao salvar contato');
          }

          // Limpa o formulário
          form.reset();
          idInput.value = '';
          
          // Atualiza a UI
          const cancelBtn = document.getElementById('cancel-edit');
          const submitBtn = document.querySelector('button[type="submit"]');
          const formTitle = document.getElementById('form-title');

          if (cancelBtn && submitBtn && formTitle) {
            cancelBtn.classList.add('hidden');
            formTitle.textContent = 'Adicionar Contato';
            submitBtn.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
              Salvar
            `;
          }

          // Recarrega a lista
          await loadContacts();
        } catch (error) {
          console.error('Erro ao salvar contato:', error);
          alert(error instanceof Error ? error.message : 'Erro ao salvar contato. Verifique o servidor.');
        }
      });
    }

    // Botão de cancelar edição
    const cancelEditBtn = document.getElementById('cancel-edit');
    if (cancelEditBtn) {
      cancelEditBtn.addEventListener('click', () => {
        form.reset();
        const idInput = document.getElementById('contact-id');
        if (idInput) idInput.value = '';
        
        cancelEditBtn.classList.add('hidden');
        const submitBtn = document.querySelector('button[type="submit"]');
        const formTitle = document.getElementById('form-title');
        
        if (submitBtn && formTitle) {
          formTitle.textContent = 'Adicionar Contato';
          submitBtn.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            Salvar
          `;
        }
      });
    }

    // Carregar contatos ao iniciar
    document.addEventListener('DOMContentLoaded', loadContacts);
  </script>
</Layout>